{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL } from '../constants/productConstants';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport { listProducts, detailsProduct };","map":{"version":3,"sources":["C:/Users/kcsra/Desktop/soiree-2/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EACIC,oBADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,mBANJ,EAOIC,sBAPJ,EAQIC,sBARJ,EASIC,sBATJ,EAUIC,sBAVJ,EAWEC,mBAXF,QAaO,+BAbP;;AAeA,MAAMC,YAAY,GAAC,MAAI,MAAMC,QAAN,IAAmB;AACtC,MAAG;AACHA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACb;AAAN,KAAD,CAAR;AACA,UAAM;AAACc,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEd,oBAAP;AAA6BiB,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAJG,CAKJ,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ,iBAAP;AAA0Be,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACA,CATD;;AAWA,MAAMC,cAAc,GAAIC,SAAD,IAAc,MAAMR,QAAN,IAAmB;AACpD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,uBAAP;AAAiCa,MAAAA,OAAO,EAAEI;AAA1C,KAAD,CAAR;AACA,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,mBAAkBK,SAA5B,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,uBAAP;AAAgCY,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX,oBAAP;AAA6Bc,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,OAAO,MAAMG,aAAa,GAAG,MAAM,OAAOT,QAAP,EAAiBU,QAAjB,KAA8B;AAC7DV,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA,QAAM;AACJiB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAC2B,IAAN,CACrB,eADqB,EAErB,EAFqB,EAGrB;AACEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAHqB,CAAvB;AAOAhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,sBADC;AAEPS,MAAAA,OAAO,EAAEF,IAAI,CAACe;AAFP,KAAD,CAAR;AAID,GAZD,CAYE,OAAOZ,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACa,QAAN,IAAkBb,KAAK,CAACa,QAAN,CAAehB,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACa,QAAN,CAAehB,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BW,MAAAA,OAAO,EAAEE;AAAtC,KAAD,CAAR;AACD;AACF,CAxBI;AAyBP,SAAQP,YAAR,EAAsBQ,cAAtB","sourcesContent":["import axios from 'axios';\r\nimport { PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n    \r\n} from '../constants/productConstants'\r\n\r\nconst listProducts=()=>async(dispatch) => {\r\n    try{\r\n    dispatch({type:PRODUCT_LIST_REQUEST});\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n}\r\ncatch(error){\r\n    dispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\r\n}\r\n}\r\n\r\nconst detailsProduct = (productId) =>async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST , payload: productId});\r\n        const {data} = await axios.get('/api/products/'+ productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\nexport {listProducts, detailsProduct}"]},"metadata":{},"sourceType":"module"}